{
  "root": true,
  "ignorePatterns": [
    "**/*"
  ],
  "plugins": [
    "@nx"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx"
      ],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "scope:frontend",
                "onlyDependOnLibsWithTags": [
                  "scope:shared",
                  "scope:frontend"
                ]
              },
              {
                "sourceTag": "scope:shared",
                "onlyDependOnLibsWithTags": [
                  "scope:shared"
                ]
              },
              {
                "sourceTag": "type:feature",
                "onlyDependOnLibsWithTags": [
                  "type:shared",
                  "type:common",
                  "type:utils",
                  "type:ui"
                ]
              },
              {
                "sourceTag": "type:shared",
                "onlyDependOnLibsWithTags": [
                  "type:shared"
                ]
              },
              {
                "sourceTag": "type:common",
                "onlyDependOnLibsWithTags": [
                  "type:common",
                  "type:utils"
                ]
              },
              {
                "sourceTag": "type:utils",
                "onlyDependOnLibsWithTags": []
              }
            ]
          }
        ]
      }
    },
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "extends": [
        "plugin:@nx/typescript"
      ],
      "rules": {
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": [
              "Component",
              "ComponentMock"
            ]
          }
        ],
        "@angular-eslint/directive-class-suffix": [
          "error",
          {
            "suffixes": [
              "Directive",
              "DirectiveMock"
            ]
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": [
                // inject
                "private-instance-readonly-field",
                // Index signature
                "signature",
                "call-signature",
                // Fields
                "public-static-field",
                "protected-static-field",
                "private-static-field",
                "#private-static-field",
                "public-decorated-field",
                "protected-decorated-field",
                "private-decorated-field",
                "public-instance-field",
                "protected-instance-field",
                "private-instance-field",
                "#private-instance-field",
                "public-abstract-field",
                "protected-abstract-field",
                "public-field",
                "protected-field",
                "private-field",
                "#private-field",
                "static-field",
                "instance-field",
                "abstract-field",
                "decorated-field",
                "field",
                // Static initialization
                "static-initialization",
                // Constructors
                "public-constructor",
                "protected-constructor",
                "private-constructor",
                "constructor",
                // Getters
                "public-static-get",
                "protected-static-get",
                "private-static-get",
                "#private-static-get",
                "public-decorated-get",
                "protected-decorated-get",
                "private-decorated-get",
                "public-instance-get",
                "protected-instance-get",
                "private-instance-get",
                "#private-instance-get",
                "public-abstract-get",
                "protected-abstract-get",
                "public-get",
                "protected-get",
                "private-get",
                "#private-get",
                "static-get",
                "instance-get",
                "abstract-get",
                "decorated-get",
                "get",
                // Setters
                "public-static-set",
                "protected-static-set",
                "private-static-set",
                "#private-static-set",
                "public-decorated-set",
                "protected-decorated-set",
                "private-decorated-set",
                "public-instance-set",
                "protected-instance-set",
                "private-instance-set",
                "#private-instance-set",
                "public-abstract-set",
                "protected-abstract-set",
                "public-set",
                "protected-set",
                "private-set",
                "#private-set",
                "static-set",
                "instance-set",
                "abstract-set",
                "decorated-set",
                "set",
                // Methods
                "public-static-method",
                "protected-static-method",
                "private-static-method",
                "#private-static-method",
                "public-decorated-method",
                "protected-decorated-method",
                "private-decorated-method",
                "public-instance-method",
                "protected-instance-method",
                "private-instance-method",
                "#private-instance-method",
                "public-abstract-method",
                "protected-abstract-method",
                "public-method",
                "protected-method",
                "private-method",
                "#private-method",
                "static-method",
                "instance-method",
                "abstract-method",
                "decorated-method",
                "method"
              ]
            }
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": "off",
        "newline-before-return": "error",
        "max-len": "off",
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "lines-between-class-members": [
          "error",
          "always"
        ],
        "newline-after-var": [
          "error",
          "always"
        ],
        "one-var": [
          "error",
          "never"
        ],
        "@typescript-eslint/prefer-readonly": [
          "error"
        ],
        "@typescript-eslint/no-shadow": [
          "error"
        ],
        "@typescript-eslint/no-inferrable-types": [
          "error"
        ],
        "object-shorthand": [
          "error",
          "always"
        ],
        "no-case-declarations": [
          "error"
        ],
        "no-empty": [
          "error"
        ],
        "@typescript-eslint/no-empty-function": [
          "error"
        ],
        // temporary overrides: remove line by line and fix occuring issues
        // many violations
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ],
        "@typescript-eslint/ban-types": "off",
        "no-useless-escape": "off",
        // few violations
        "no-prototype-builtins": "off",
        "prefer-spread": "off"
      }
    },
    {
      "files": [
        "*.js",
        "*.jsx"
      ],
      "extends": [
        "plugin:@nx/javascript"
      ],
      "rules": {}
    },
    {
      "files": [
        "*.spec.ts",
        "*.spec.tsx",
        "*.spec.js",
        "*.spec.jsx"
      ],
      "env": {
        "jest": true
      },
      "rules": {}
    }
  ]
}
